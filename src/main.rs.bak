extern crate plist;

use std::env;
use std::fs::File;
use std::io::BufReader;
use plist::Plist;

fn main() {
    let file = env::args().nth(1).expect("Need to supply a file right now.");

    let f = File::open(file).unwrap();
    let mut reader = BufReader::new(f);

    let plist = Plist::from_reader(&mut reader).unwrap();

    match plist {
        Plist::Dict(ref d) => {
            for (key, val) in d {
                println!("{} > ", key);
                match val {
                    Plist::Dict(ref d2) => {
                        for (key, val) in d2 {
                            println!("\t{} > ", key);
                            match val {
                                Plist::Array(ref a) => {
                                    for (i, _val) in a.iter().enumerate() {
                                        println!("\t\t{}", i);
                                    };
                                },
                                _ => {},
                            };
                        };
                    },
                    _ => {},
                };
            };
        },
        _ => panic!(),
    }
}
